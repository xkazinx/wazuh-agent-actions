name: "Doxygen Documentation Generator"
description: "Generates documentation for a given module"

inputs:
  path:
    description: "Path to the module for which to generate documentation"
    default: ./
  doxygen_config:
    description: "Path to the Doxygen configuration file"
    default: ./Doxyfile

runs:
  using: "composite"
  steps:
    - name: Install Doxygen and Graphviz
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz

    - name: Verify Graphviz Installation
      shell: bash
      run: |
        echo "üîç Checking Graphviz installation..."
        dot -V || { echo "‚ùå Error: Graphviz (dot) is not installed"; exit 1; }
        which dot || { echo "‚ùå Error: dot command not found"; exit 1; }
        echo "‚úÖ Graphviz is installed"

    - name: Test Graphviz Functionality
      shell: bash
      run: |
        echo "üîç Testing Graphviz functionality..."
        echo "digraph G { A -> B; B -> C; }" > test.dot
        if ! dot -Tpng test.dot -o test.png; then
          echo "‚ùå Graphviz test failed: dot -Tpng is not working"
          exit 1
        fi
        echo "‚úÖ Graphviz is functioning correctly"

    - name: Generate documentation
      shell: bash
      run: |
        echo "üìÑ Generating documentation..."

        if [ ! -f "${{ inputs.doxygen_config }}" ]; then
          echo "‚ùå Error: Doxygen config file '${{ inputs.doxygen_config }}' not found"
          exit 1
        fi

        CONFIG_FILE="${{ inputs.path }}/doxygen_config.cfg"
        {
          cat "${{ inputs.doxygen_config }}" || { echo "‚ùå Error reading config"; exit 1; }
          echo "OUTPUT_DIRECTORY = ${{ inputs.path }}/doxygen"
          echo "INPUT = ${{ inputs.path }}"
        } > "${CONFIG_FILE}"

        echo "‚úÖ Doxygen configuration file created: ${CONFIG_FILE}"

        if ! dot -c; then
          echo "‚ö†Ô∏è Warning: dot -c failed. Graphviz might not be properly configured"
        fi

        ERRORS_FILE="${{ inputs.path }}/doxygen_errors.txt"
        echo "üöÄ Running Doxygen..."
        if ! doxygen -s "${CONFIG_FILE}" 2> >(tee "${ERRORS_FILE}"); then
          echo "‚ùå Doxygen encountered errors"
          exit 1
        fi

        if grep -i "error:" "${ERRORS_FILE}"; then
          echo "‚ùå Documentation generation failed due to errors"
          exit 1
        else
          echo "‚úÖ Documentation generated successfully"
        fi

    - name: Upload Doxygen Errors
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: Doxygen Errors
        path: ${{ inputs.path }}/doxygen_errors.txt
        retention-days: 1

    - name: Upload Doxygen Documentation
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: Doxygen Documentation
        path: ${{ inputs.path }}/doxygen
        retention-days: 1
